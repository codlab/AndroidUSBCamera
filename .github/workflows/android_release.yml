name: Android Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: wget
        uses: wei/wget@v1
        with:
          args: -O android-ndk-r14b.zip https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip
      - name: extract-7z-action
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ./android-ndk-r14b.zip
          pathTarget: .
      - run: ls .
      - run: export PWD=`pwd` ; echo "ndk.dir=$PWD/android-ndk-r14b" >> local.properties ; chmod +x $PWD/android-ndk-r14b/ndk-build
      - run: cat local.properties
      - run: chmod +x ./gradlew && ./gradlew :assembleAll --debug && ./gradlew :installAll
      - run: cp -r ~/.m2/* .
      - run: zip --junk-paths library repository
      - uses: actions/upload-artifact@v1
        with:
          name: Package
          path: repository
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./library.zip
          asset_name: library.zip
          asset_content_type: application/zip